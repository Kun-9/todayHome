<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="seller">
<!-- 판매자 회원가입 -->
	<insert id="insertSeller" parameterType="com.sp.app.domain.seller.Seller">
		INSERT INTO seller (seller_id, brand_name,password,business_number,seller_name,tel,email,representative_name,presentation,reg_date)
		VALUES (SEQ_SELLER.NEXTVAL,#{brandName}, #{password}, #{businessNumber}, #{sellerName}, #{tel}, #{email}, #{representativeName}, #{presentation},SYSDATE)	
	</insert>
	
<!-- 판매자 정보 수정 -->	
	<update id="updateSeller" parameterType="com.sp.app.domain.seller.Seller">
		UPDATE SELLER SET brand_name=#{brandName}, password=#{password},
			seller_name=#{sellerName},tel=#{tel},
			email=#{email}, representative_name=#{representativeName},
			presentation=#{presentation, jdbcType=VARCHAR},reg_date=SYSDATE
		WHERE seller_id=#{sellerId}	
	</update>
	
<!-- 판매자 상태 확인 -->
	<select id="readSellerStatus" parameterType="Long" resultType="com.sp.app.domain.seller.Seller">
		SELECT status 
		FROM seller_status
		WHERE seller_id= #{sellerId}
	</select>
	
<!-- 판매자 상태 수정 -->
	<update id="updateSellerStatus" parameterType="map">
		UPDATE seller_status SET status = #{status}
		WHERE seller_id = #{sellerId}	
	</update>
	
<!-- 판매자 리스트 -->
  <select id="getSellersByCondition" parameterType="map" resultType="com.sp.app.domain.seller.Seller">
    SELECT .seller_id, s.brand_name, s.business_number, s.seller_name, s.tel, s.email,
    s.representative_name, s.presentation, s.accumulated_amount, s.reg_date,
    ss.status
  FROM seller s
JOIN seller_status ss ON s.seller_id = ss.seller_id
  <where>
	<if test="condition=='sellerName'">
		INSTR(s.seller_name, #{keyword}) &gt; 0
	</if>
	<if test="condition=='businessNumber'">
		INSTR(s.business_number, #{keyword}) &gt; 0
	</if>
	<if test="condition=='sellerName'">
		INSTR(s.seller_name, #{keyword}) &gt; 0
	</if>
	<if test="condition=='brandName'">
		INSTR(s.brand_name, #{keyword}) &gt; 0
	</if>
    AND (
	<if test="regDate != null">
		s.reg_date &gt;= #{regDate}
	</if>
    )
</where>

<if test="orderByAmount != null">
    <if test="orderByAmount == 'asc'">
      ORDER BY s.accumulated_amount ASC
    </if>
    <if test="orderByAmount == 'desc'">
      ORDER BY s.accumulated_amount DESC
    </if>
  </if>
  <if test="orderByDate != null">
    <if test="orderByDate == 'asc'">
      ORDER BY s.reg_date ASC
    </if>
    <if test="orderByDate == 'desc'">
      ORDER BY s.reg_date DESC
    </if>
    </if>
	</select>
	
    	<!-- 판매자 수 -->
	<select id="SellerCount" parameterType="" resultType="Integer">
		SELECT NVL(COUNT(*),0)
		FROM seller_status 
		WHERE status = 1;		  
	</select>
</mapper>