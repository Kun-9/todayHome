<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sellerAdjustment">
	<!-- 정산 기록 수정 -->
	<update id="updateAdjustment" parameterType="com.sp.app.domain.seller.SellerAdjustment">
		UPDATE adjustment SET amount=#{amount}, adjustment_date=SYSDATE
		WHERE adjustment_id = #{adjustmentId} 
	</update>
	
	<!-- 정산 기록 생성 -->
	<insert id="createAdjustment" parameterType="com.sp.app.domain.seller.SellerAdjustment">
			INSERT INTO adjustment (adjustment_id, seller_id, adjustment_date,amount)
			VALUES (SEQ_ADJUSTMENT.NEXTVAL,#{sellerId},SYSDATE,#{amount})
	</insert>
	
	<!-- 모든 정산 목록 반환  -->
	<select id="getAllAdjustments" parameterType="map" resultType="com.sp.app.domain.seller.SellerAdjustment">
        SELECT to_char(adj.adjustment_date, 'yyyy-mm-dd') as adjustmentDate, adj.amount,to_char(sel.reg_date, 'yyyy-mm-dd') as regDate
        		 ,sel.brand_name as brandName, sel.business_number as businessNumber,
    			 sel.seller_name as sellerName,sel.tel,sel.email,sel.representative_name as representativeName
		FROM adjustment adj
		JOIN seller sel ON adj.seller_id = sel.seller_id
		<where>
		    <if test="startDate != null and startDate !='' and endDate != null and endDate !='' ">
		      adj.adjustment_date BETWEEN #{startDate} AND #{endDate}
		    </if>
			<choose>
		      <when test="condition=='sellerName'">
		        <if test="keyword != null and  keyword !='' ">
		          AND INSTR(sel.seller_name, #{keyword}) &gt; 0
		        </if>
		      </when>
		      <when test="condition=='businessNumber'">
		        <if test="keyword != null and  keyword !=''">
		          AND INSTR(sel.business_number, #{keyword}) &gt; 0
		        </if>
		      </when>
		      <when test="condition=='brandName'">
		        <if test="keyword != null and  keyword !=''">
		          AND INSTR(sel.brand_name, #{keyword}) &gt; 0
		        </if>
		      </when>
		    </choose>
		 </where>
		ORDER BY adjustment_date DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<!-- 판매자 아이디로 정산 목록 반환 -->
	<select id="getAdjustmentsBySellerId" parameterType="map" resultType="com.sp.app.domain.seller.SellerAdjustment">
		SELECT adjustment_id as adjustmentId, to_char(adjustment_date, 'YYYY-MM-DD') as adjustmentDate, amount
		FROM adjustment
		<where>
		 seller_id = #{sellerId}
		    <if test="startDate != null and startDate !='' and endDate != null and endDate !='' ">
		     AND adjustment_date BETWEEN #{startDate} AND #{endDate}
		    </if>
		</where>
		ORDER BY adjustment_date DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<!-- 정산 아이디로 정산 반환  -->
	<select id="getAdjustmentByAdjustmentId" parameterType="Long" resultType="com.sp.app.domain.seller.SellerAdjustment">
		SELECT seller_id as sellerId, to_char(adjustment_date, 'YYYY-MM-DD') as adjustmentDate,amount
		FROM adjustment
		WHERE adjustment_id = #{adjustmentId}
	</select>
	
	<select id="adjustmentCount" parameterType="int" resultType="int">
		SELECT NVL(COUNT(*), 0) as dataCount
		FROM adjustment adj
		JOIN seller sel ON adj.seller_id = sel.seller_id
		<where>
		    <if test="startDate != null and startDate !='' and endDate != null and endDate !='' ">
		      adj.adjustment_date BETWEEN #{startDate} AND #{endDate}
		    </if>
		<choose>
      <when test="condition=='sellerName'">
        <if test="keyword != null and  keyword !='' ">
          AND INSTR(sel.seller_name, #{keyword}) &gt; 0
        </if>
      </when>
      <when test="condition=='businessNumber'">
        <if test="keyword != null and  keyword !=''">
          AND INSTR(sel.business_number, #{keyword}) &gt; 0
        </if>
      </when>
      <when test="condition=='brandName'">
        <if test="keyword != null and  keyword !=''">
          AND INSTR(sel.brand_name, #{keyword}) &gt; 0
        </if>
      </when>
    </choose>
		 </where>
	</select>
	<select id="adjustmentCountBysellerId" parameterType="Long" resultType="int">
        SELECT NVL(COUNT(*), 0) as dataCount
		FROM adjustment
		<where>
		 seller_id = #{sellerId}
		    <if test="startDate != null and startDate !='' and endDate != null and endDate !='' ">
		     AND adjustment_date BETWEEN #{startDate} AND #{endDate}
		    </if>
		</where>
	</select>
</mapper>

